/* tslint:disable */
/* eslint-disable */
// Generated by Microsoft Kiota
// @ts-ignore
import { type AdditionalDataHolder, type Guid, type Parsable, type ParseNode, type SerializationWriter } from '@microsoft/kiota-abstractions';

/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {Players}
 */
// @ts-ignore
export function createPlayersFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoPlayers;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {Votes}
 */
// @ts-ignore
export function createVotesFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoVotes;
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoPlayers(players: Partial<Players> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        "createdAt": n => { players.createdAt = n.getStringValue() ?? "now()"; },
        "id": n => { players.id = n.getGuidValue() ?? extensions.uuid_generate_v4(); },
        "name": n => { players.name = n.getStringValue(); },
        "telegramId": n => { players.telegramId = n.getStringValue(); },
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoVotes(votes: Partial<Votes> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        "createdAt": n => { votes.createdAt = n.getStringValue() ?? "now()"; },
        "id": n => { votes.id = n.getGuidValue() ?? extensions.uuid_generate_v4(); },
        "playerA": n => { votes.playerA = n.getGuidValue(); },
        "playerB": n => { votes.playerB = n.getGuidValue(); },
        "voterId": n => { votes.voterId = n.getStringValue(); },
        "winnerId": n => { votes.winnerId = n.getGuidValue(); },
    }
}
export interface Players extends AdditionalDataHolder, Parsable {
    /**
     * Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.
     */
    additionalData?: Record<string, unknown>;
    /**
     * The createdAt property
     */
    createdAt?: string | null;
    /**
     * Note:This is a Primary Key.<pk/>
     */
    id?: Guid | null;
    /**
     * The name property
     */
    name?: string | null;
    /**
     * The telegramId property
     */
    telegramId?: string | null;
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializePlayers(writer: SerializationWriter, players: Partial<Players> | undefined | null = {}) : void {
    if (players) {
        writer.writeStringValue("createdAt", players.createdAt ?? "now()");
        writer.writeGuidValue("id", players.id ?? extensions.uuid_generate_v4());
        writer.writeStringValue("name", players.name);
        writer.writeStringValue("telegramId", players.telegramId);
        writer.writeAdditionalData(players.additionalData);
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeVotes(writer: SerializationWriter, votes: Partial<Votes> | undefined | null = {}) : void {
    if (votes) {
        writer.writeStringValue("createdAt", votes.createdAt ?? "now()");
        writer.writeGuidValue("id", votes.id ?? extensions.uuid_generate_v4());
        writer.writeGuidValue("playerA", votes.playerA);
        writer.writeGuidValue("playerB", votes.playerB);
        writer.writeStringValue("voterId", votes.voterId);
        writer.writeGuidValue("winnerId", votes.winnerId);
        writer.writeAdditionalData(votes.additionalData);
    }
}
export interface Votes extends AdditionalDataHolder, Parsable {
    /**
     * Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.
     */
    additionalData?: Record<string, unknown>;
    /**
     * The createdAt property
     */
    createdAt?: string | null;
    /**
     * Note:This is a Primary Key.<pk/>
     */
    id?: Guid | null;
    /**
     * Note:This is a Foreign Key to `players.id`.<fk table='players' column='id'/>
     */
    playerA?: Guid | null;
    /**
     * Note:This is a Foreign Key to `players.id`.<fk table='players' column='id'/>
     */
    playerB?: Guid | null;
    /**
     * The voterId property
     */
    voterId?: string | null;
    /**
     * Note:This is a Foreign Key to `players.id`.<fk table='players' column='id'/>
     */
    winnerId?: Guid | null;
}
/* tslint:enable */
/* eslint-enable */
